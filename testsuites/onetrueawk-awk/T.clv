#!/bin/sh
# Original script:
# Copyright 1997 Lucent Technologies.  See LICENCE for licensing information.
#
# Modifications:
# Copyright 2022 Matthew Gretton-Dann
# Licence: SPDX Identifier: Apache-2.0

run_dir="$(pwd)"
cd "$(dirname "$0")"
src_dir="$(pwd)"
cd "${run_dir}"

echo() {
  if [ "X$1" = "X-n" ]
  then
      shift
      printf "%s" "$*"
  else
      printf "%s\n" "$*"
  fi
}

testname="$(basename "$0")"
exit_code=0
error() {
  echo "$testname: FAIL - $1"
  exit_code=1
}

#!/bin/sh
#echo T.clv: check command-line variables

awk=${awk-../a.out}
foo="${run_dir}/${testname}.output"
foo0="${run_dir}/${testname}.output.0"
foo1="${run_dir}/${testname}.output.1"
foo2="${run_dir}/${testname}.output.2"

rm -f core

# stdin only, no cmdline asgn
echo 'hello
goodbye' | $awk '
BEGIN { x=0; print x; getline; print x, $0 }
' >"${foo1}"
echo '0
0 hello' >"${foo2}"
diff "${foo1}" "${foo2}" || error '(stdin only)'
rm -rf "${foo1}" "${foo2}"

# cmdline asgn then stdin
echo 'hello
goodbye' | $awk '
BEGIN { x=0; print x; getline; print x, $0 }
' x=1 >"${foo1}"
echo '0
1 hello' >"${foo2}"
diff "${foo1}" "${foo2}" || error '(x=1 only)'
rm -rf "${foo1}" "${foo2}"

# several cmdline asgn, then stdin
echo 'hello
goodbye' | $awk '
BEGIN { x=0; print x; getline; print x, $0 }
' x=1 x=2 x=3 >"${foo1}"
echo '0
3 hello' >"${foo2}"
diff "${foo1}" "${foo2}" || error '(x=3 only)'
rm -rf "${foo1}" "${foo2}"

# several cmdline asgn, then file
echo 'hello
goodbye' >"${foo}"
$awk '
BEGIN { x=0; print x; getline; print x, $0 }
' x=1 x=2 x=3 "${foo}" >"${foo1}"
echo '0
3 hello' >"${foo2}"
diff "${foo1}" "${foo2}" || error '(x=3 only)'
rm -rf "${foo1}" "${foo2}" "${foo}"

# cmdline asgn then file
echo 4 >"${foo1}"
$awk 'BEGIN { getline; print x}' x=4 /dev/null >"${foo2}"
diff "${foo1}" "${foo2}" || error '(x=4 /dev/null)'
rm -rf "${foo1}" "${foo2}"

#cmdline asgn then file but no read of it
echo 0 >"${foo1}"
$awk 'BEGIN { x=0; getline <"/dev/null"; print x}' x=5 /dev/null >"${foo2}"
diff "${foo1}" "${foo2}" || error '(x=5 /dev/null)'
rm -rf "${foo1}" "${foo2}"

#cmdline asgn then file then read
echo 'xxx
yyy
zzz' >"${foo}"
echo '6
end' >"${foo1}"
$awk 'BEGIN { x=0; getline; print x}
      END { print x }' x=6 "${foo}" x=end >"${foo2}"
diff "${foo1}" "${foo2}" || error '(x=6 /dev/null)'
rm -rf "${foo1}" "${foo2}" "${foo}"

#cmdline asgn then file then read
echo '0
end' >"${foo1}"
$awk 'BEGIN { x=0; getline <"/dev/null"; print x}
      END { print x }' x=7 /dev/null x=end >"${foo2}"
diff "${foo1}" "${foo2}" || error '(x=7 /dev/null)'
rm -rf "${foo1}" "${foo2}"

#cmdline asgn then file then read; _ in commandname
echo '0
end' >"${foo1}"
$awk 'BEGIN { _=0; getline <"/dev/null"; print _}
      END { print _ }' _=7A /dev/null _=end >"${foo2}"
diff "${foo1}" "${foo2}" || error '(_=7A /dev/null)'
rm -rf "${foo1}" "${foo2}"

# illegal varname in commandname
$awk '{ print }' 99_="${foo1}" /dev/null >"${foo1}" 2>"${foo2}"
grep "can't open.*${testname}\.output\.1" "${foo2}" >/dev/null 2>&1 || error '(7B: illegal varname)'
rm -rf "${foo1}" "${foo2}"

# these test the new -v option:  awk ... -v a=1 -v b=2 'prog' does before BEGIN

echo 123 >"${foo1}"
$awk -v x=123 'BEGIN { print x }' >"${foo2}"
diff "${foo1}" "${foo2}" || error '(x=11)'
rm -rf "${foo1}" "${foo2}"

echo 123 >"${foo1}"
$awk -vx=123 'BEGIN { print x }' >"${foo2}"
diff "${foo1}" "${foo2}" || error '(x=11a)'
rm -rf "${foo1}" "${foo2}"

echo 123 abc 10.99 >"${foo1}"
$awk -v x=123 -v y=abc -v z1=10.99 'BEGIN { print x, y, z1 }' >"${foo2}"
diff "${foo1}" "${foo2}" || error '(x=12)'
rm -rf "${foo1}" "${foo2}"

echo 123 abc 10.99 >"${foo1}"
$awk -vx=123 -vy=abc -vz1=10.99 'BEGIN { print x, y, z1 }' >"${foo2}"
diff "${foo1}" "${foo2}" || error '(x=12a)'
rm -rf "${foo1}" "${foo2}"

echo 123 abc 10.99 >"${foo1}"
$awk -v x=123 -v y=abc -v z1=10.99 -- 'BEGIN { print x, y, z1 }' >"${foo2}"
diff "${foo1}" "${foo2}" || error '(x=12a)'
rm -rf "${foo1}" "${foo2}"

echo 'BEGIN { print x, y, z1 }' >"${foo0}"
echo 123 abc 10.99 >"${foo1}"
$awk -v x=123 -v y=abc -f "${foo0}" -v z1=10.99 >"${foo2}"
diff "${foo1}" "${foo2}" || error '(x=13)'
rm -rf "${foo1}" "${foo2}"

echo 'BEGIN { print x, y, z1 }' >"${foo0}"
echo 123 abc 10.99 >"${foo1}"
$awk -vx=123 -vy=abc -f "${foo0}" -vz1=10.99 >"${foo2}"
diff "${foo1}" "${foo2}" || error '(x=13a)'
rm -rf "${foo1}" "${foo2}"

echo 'BEGIN { print x, y, z1 }' >"${foo0}"
echo 123 abc 10.99 >"${foo1}"
$awk -f "${foo0}" -v x=123 -v y=abc -v z1=10.99 >"${foo2}"
diff "${foo1}" "${foo2}" || error '(x=14)'
rm -rf "${foo1}" "${foo2}"

echo 'BEGIN { print x, y, z1 }' >"${foo0}"
echo 123 abc 10.99 >"${foo1}"
$awk -f "${foo0}" -vx=123 -vy=abc -vz1=10.99 >"${foo2}"
diff "${foo1}" "${foo2}" || error '(x=14a)'
rm -rf "${foo1}" "${foo2}"

echo 'BEGIN { print x, y, z1 }
END { print x }' >"${foo0}"
echo '123 abc 10.99
4567' >"${foo1}"
$awk -f "${foo0}" -v x=123 -v y=abc -v z1=10.99 /dev/null x=4567 /dev/null >"${foo2}"
diff "${foo1}" "${foo2}" || error '(x=15)'
rm -rf "${foo1}" "${foo2}"

echo 'BEGIN { print x, y, z1 }
END { print x }' >"${foo0}"
echo '123 abc 10.99
4567' >"${foo1}"
$awk -f "${foo0}" -vx=123 -vy=abc -vz1=10.99 /dev/null x=4567 /dev/null >"${foo2}"
diff "${foo1}" "${foo2}" || error '(x=15a)'
rm -rf "${foo1}" "${foo2}"

echo 'BEGIN { print x, y, z1 }
NR==1 { print x }' >"${foo0}"
echo '123 abc 10.99
4567' >"${foo1}"
$awk -v x=123 -v y=abc -v z1=10.99 -f "${foo0}" x=4567 /etc/passwd >"${foo2}"
diff "${foo1}" "${foo2}" || error '(x=16)'
rm -rf "${foo1}" "${foo2}"

echo 'BEGIN { print x, y, z1 }
NR==1 { print x }' >"${foo0}"
echo '123 abc 10.99
4567' >"${foo1}"
$awk -vx=123 -vy=abc -vz1=10.99 -f "${foo0}" x=4567 /etc/passwd >"${foo2}"
diff "${foo1}" "${foo2}" || error '(x=16a)'
rm -rf "${foo1}" "${foo2}"



# special chars in commandline assigned value;
# have to use local echo to avoid quoting problems.

echo 'a\\b\z' >"${foo1}"
echo 'hello' | $awk '{print x}' x='\141\\\\\142\\z' >"${foo2}"
diff "${foo1}" "${foo2}" || error '(x=17)'
rm -rf "${foo1}" "${foo2}"

echo "a
z" >"${foo1}"
echo 'hello' | $awk '{print x}' x='a\nz' >"${foo2}"
diff "${foo1}" "${foo2}" || error '(x=18)'
rm -rf "${foo1}" "${foo2}"

# a bit circular here...
$awk 'BEGIN { printf("a%c%c%cz\n", "\b", "\r", "\f") }' >"${foo1}"
echo 'hello' | $awk '{print x}' x='a\b\r\fz' >"${foo2}"
diff "${foo1}" "${foo2}" || error '(x=19)'
rm -rf "${foo1}" "${foo2}"


### newer -v tests


$awk -vx 'BEGIN {print x}' >"${foo}" 2>&1
grep 'invalid -v option argument: x' "${foo}" >/dev/null || error '(x=20)'
rm -rf "${foo1}" "${foo2}"

$awk -v x 'BEGIN {print x}' >"${foo}" 2>&1
grep 'invalid -v option argument: x' "${foo}" >/dev/null || error '(x=20a)'
rm -rf "${foo1}" "${foo2}"

exit $exit_code
